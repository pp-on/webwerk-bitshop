{"version":3,"sources":["app.js"],"names":["homeURL","wwThemeParams","trapFocusinModal","focusableContent","isTabPressed","e","querySelectorAll","firstFocusableElement","activeElement","lastFocusableElement","length","document","addEventListener","key","keyCode","shiftKey","preventDefault","focus","jQuery","ready","body","classList","contains","removeAttr","attr","hide","prop","text","on","remove"],"mappings":"AACA,MAAMA,QAAUC,cAAcD,QAoE9B,SAAAE,mBAcE,MAKAC,EALIC,SAAeC,cAAU,wBAKbC,iBADf,oBAECC,EAAaC,EAAkBD,GAT7BE,EAAuBN,EAAiBA,EAAiBO,OAAS,GAYnEC,SAAAC,iBAAA,WAAA,SAAAP,IACI,QAAAA,EAAAQ,KAAA,IAAAR,EAAAS,WALHT,EAAEU,SAQFV,SAAEW,gBAAFT,IACDE,EAAAQ,QACFZ,EAAAW,kBAIFL,SAAAH,gBAAAC,IAPKF,EAAsBU,QACtBZ,EAAEW,sBAKRT,EAAsBU,QAnGtBC,OAAOP,UAAUQ,OAAM,WASnBD,SAAOE,KAAAC,UAADC,SAAoBC,cAI5BL,OAAA,mBAAAK,WAAA,YACIL,OAAA,mBAAAM,KAAA,gBAAA,SAOJN,OAAA,iCAAAO,SAQDP,OACD,aAAAO,OAIAP,OAAA,mBAAAQ,KAAA,YAAA,GARER,OAAO,mBAAmBM,KAAK,gBAAiB,QASlDN,OAAO,kBAAAS,KAAA,aAONT,OAHD,iCAAAU,GAAA,QAAA,mBAAA,WAKCV,OAED,wBAAAW,SATAX,OAAO,wBAAwBW,YAY/BX,OAAA,2CAAAU,GAAA,QAAA,gBAAA,WACAV,OAAA,wBAAAW,SACAX,OAAA,wBAAAW","file":"app.min.js","sourcesContent":["// const homeURL = document.location.href;\r\nconst homeURL = wwThemeParams.homeURL;\r\njQuery(document).ready(function(){\r\n// Logout-Popup Button Funktionnen.\r\n\r\n\r\n\r\n// Button-Wechsel. Wenn eingeloggt, dann ....\r\nif (document.body.classList.contains( 'logged-in')) {\r\n  // Wenn angemeldet::\r\n  // Signout disablen\r\n    jQuery('#signout-button').removeAttr('disabled');\r\n    jQuery('#signout-button').attr('aria-disabled', 'false');\r\n  // Login Status: Angemeldet als ...\r\n    // jQuery('#login-status').text('Sie sind angemeldet als ' ); // hier per Ajax noch display name user übergeben.\r\n  // Signin-Button wird zum Kundenkonto\r\n      // jQuery('#signin-button').text('Kundenkonto');\r\n      // jQuery('#signin-button').attr(\"href\", homeURL + \"/Kundenkonto\");\r\n      // jQuery('.btn-cart').show();\r\n      jQuery('.product-btn > #signin-button').hide();\r\n    // Anzahl der Waren im Warenkorb anzeigen.\r\n    // jQuery('#items-count').text();\r\n}else{\r\n  // Wenn nicht angemeldet::\r\n\r\n  // alle \"In den Warenkorb Knöpfe\" ausblenden.\r\n  jQuery('.btn-cart').hide();\r\n  jQuery('#signout-button').prop('disabled', true);\r\n  jQuery('#signout-button').attr('aria-disabled', 'true');\r\n  // jQuery('#login-status').text('Sie sind nicht angemeldet.');\r\n  jQuery('#signin-button').text('Anmelden');\r\n}\r\n// Ende: Button-Wechsel\r\n\r\n\r\n\r\n// Close Cart modal\r\njQuery(\".product-footer, .product-btn\").on(\"click\", \".c-btn__shop-on\" ,function(){\r\njQuery('#cart-modal--webwerk').remove();\r\njQuery('#cart-modal--webwerk').remove();\r\n});\r\njQuery(\".logout-btn, .box-login, .btn-container\").on(\"click\", \".c-btn__stay\", function(){\r\n  jQuery('#cart-modal--webwerk').remove();\r\n  jQuery('#cart-modal--webwerk').remove();\r\n});\r\n\r\n});\r\n\r\n// Zu Tabellenfeldern disabled hinzufügen.\r\n\r\n/****************************************************\r\n*                                                   *\r\n* Fokusfalle                                        *\r\n*                                                   *\r\n/****************************************************/\r\n\r\n\r\nfunction trapFocusinModal(){\r\n// Helperfunctions.\r\n// select a list of matching elements, context is optional\r\nfunction $0(selector, context) {\r\n  return (context || document).querySelectorAll(selector);\r\n}\r\n\r\n// select the first match only, context is optional\r\nfunction $1(selector, context) {\r\n  return (context || document).querySelector(selector);\r\n}\r\n// add all the elements inside modal which you want to make focusable\r\n// https://uxdesign.cc/how-to-trap-focus-inside-modal-to-make-it-ada-compliant-6a50f9a70700 .\r\nconst modal = document.querySelector('#cart-modal--webwerk'); // select the modal by it's id.\r\n\r\n\r\nconst  focusableElements =\r\n    'button, input, a'; //  [tabindex]:not([tabindex=\"-1\"])\r\n\r\nconst focusableContent = modal.querySelectorAll(focusableElements);\r\n\r\nconst firstFocusableElement = focusableContent[0]; // get first element to be focused inside modal\r\n\r\nconst lastFocusableElement = focusableContent[focusableContent.length - 1]; // get last element to be focused inside modal\r\n\r\ndocument.addEventListener('keydown', function(e) {\r\n  let isTabPressed = e.key === 'Tab' || e.keyCode === 9;\r\n\r\n  if (!isTabPressed) {\r\n    return;\r\n  }\r\n  if (e.shiftKey) { // if shift key pressed for shift + tab combination\r\n    if (document.activeElement === firstFocusableElement) {\r\n      lastFocusableElement.focus(); // add focus for the last focusable element\r\n      e.preventDefault();\r\n    }\r\n  } else { // if tab key is pressed\r\n    if (document.activeElement === lastFocusableElement) { // if focused has reached to last focusable element then focus first focusable element after pressing tab\r\n      firstFocusableElement.focus(); // add focus for the first focusable element\r\n      e.preventDefault();\r\n    }\r\n  }\r\n});\r\n\r\nfirstFocusableElement.focus();\r\n}\r\n"]}